Index: elements/__init__.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from elements.header_links import HeaderLinks\r\nfrom elements.header_menu import HeaderMenu
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/elements/__init__.py b/elements/__init__.py
--- a/elements/__init__.py	
+++ b/elements/__init__.py	
@@ -1,2 +1,3 @@
 from elements.header_links import HeaderLinks
-from elements.header_menu import HeaderMenu
\ No newline at end of file
+from elements.header_menu import HeaderMenu
+from elements.dataset import Datasets
\ No newline at end of file
Index: tests/test_register_link.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import allure\r\nfrom pages import MainPage\r\nfrom pages.register_link_page import RegisterLinkPage\r\n\r\n\r\n@allure.feature(\"Header Links\")\r\n@allure.title(\"Test open register link\")\r\ndef test_open_register_link(driver):\r\n    main_page = MainPage(driver)\r\n\r\n    main_page.open()\r\n    main_page.assert_that_main_is_opened()\r\n\r\n    main_page.click_on_register()\r\n\r\n    register_link_page = RegisterLinkPage(driver)\r\n    register_link_page.assert_register_page_is_opened()\r\n\r\n\r\n@allure.feature(\"Header Links\")\r\n@allure.title(\"Test registration without entering data\")\r\ndef test_registration_without_entering_data(driver):\r\n    main_page = MainPage(driver)\r\n\r\n    main_page.open()\r\n    main_page.assert_that_main_is_opened()\r\n\r\n    main_page.click_on_register()\r\n\r\n    register_link_page = RegisterLinkPage(driver)\r\n    register_link_page.assert_register_page_is_opened()\r\n\r\n    main_page.click_on_register_button()\r\n\r\n    register_link_page.validation_message()\r\n\r\n\r\n@allure.feature(\"Header Links\")\r\n@allure.title(\"Test new user input data\")\r\ndef test_new_user_input_data(driver):\r\n    main_page = MainPage(driver)\r\n\r\n    main_page.open()\r\n    main_page.click_on_register()\r\n\r\n    register_link_page = RegisterLinkPage(driver)\r\n    register_link_page.assert_register_page_is_opened()\r\n    register_link_page.new_user_input_data()\r\n\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/tests/test_register_link.py b/tests/test_register_link.py
--- a/tests/test_register_link.py	
+++ b/tests/test_register_link.py	
@@ -23,28 +23,36 @@
     main_page = MainPage(driver)
 
     main_page.open()
-    main_page.assert_that_main_is_opened()
 
     main_page.click_on_register()
 
     register_link_page = RegisterLinkPage(driver)
-    register_link_page.assert_register_page_is_opened()
-
     main_page.click_on_register_button()
-
     register_link_page.validation_message()
 
 
 @allure.feature("Header Links")
-@allure.title("Test new user input data")
-def test_new_user_input_data(driver):
+@allure.title("Random new user input data")
+def test_random_new_user_input_data(driver):
     main_page = MainPage(driver)
 
     main_page.open()
     main_page.click_on_register()
 
     register_link_page = RegisterLinkPage(driver)
-    register_link_page.assert_register_page_is_opened()
-    register_link_page.new_user_input_data()
+    register_link_page.random_new_user_input_data()
+
+
+@allure.feature("Header Links")
+@allure.title("Registration with dataset")
+def test_registration_with_dataset(driver):
+    main_page = MainPage(driver)
+
+    main_page.open()
+    main_page.click_on_register()
+
+    register_link_page = RegisterLinkPage(driver)
+    register_link_page.registration_with_dataset()
+
 
 
Index: pages/login_link_page.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import allure\r\n\r\nfrom elements import HeaderLinks\r\nfrom helpers import BASE_URL\r\nfrom locators import MainLocators, LoginLinkLocators\r\nfrom pages import BasePage\r\n\r\n\r\nclass LoginLinkPage(LoginLinkLocators, HeaderLinks, MainLocators, BasePage):\r\n    def __init__(self, driver):\r\n        super().__init__(driver)\r\n\r\n    def open(self):\r\n        self.driver.get(BASE_URL)\r\n\r\n    @allure.step(\"Assert login page is opened\")\r\n    def assert_login_page_is_opened(self):\r\n        self.assertions.assert_that_element_containce_text(self.TEXT_LOGIN, 'Welcome, Please Sign In!')\r\n        assert self.get_element(self.FOOTER_MENU_WRAPPER)\r\n\r\n        self.save_screenshot('assert_login_page_is_opened.png')\r\n        allure.attach.file(\r\n            \"assert_login_page_is_opened.png\",\r\n            name=\"assert_login_page_is_opened\",\r\n            attachment_type=allure.attachment_type.PNG\r\n        )
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/pages/login_link_page.py b/pages/login_link_page.py
--- a/pages/login_link_page.py	
+++ b/pages/login_link_page.py	
@@ -23,4 +23,5 @@
             "assert_login_page_is_opened.png",
             name="assert_login_page_is_opened",
             attachment_type=allure.attachment_type.PNG
-        )
\ No newline at end of file
+        )
+
Index: elements/dataset.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/elements/dataset.py b/elements/dataset.py
new file mode 100644
--- /dev/null	
+++ b/elements/dataset.py	
@@ -0,0 +1,21 @@
+# import time
+#
+#
+# def register_dataset():
+#     first_name = str(time.time())
+#     last_name = str(time.time())
+#     email = str(time.time()) + "@mail.com"
+#     password = "testtest"
+#     return first_name, last_name, email, password
+
+
+class Datasets:
+    first_name = "Kristina"
+    last_name = "Zhuk"
+    email = "test111222@test111222.com"
+    password = "test123"
+    new_password = "test1234"
+    city = "Minsk"
+    address1 = "Minsk1"
+    zip_code = "123123"
+    phone = "+12312312311"
\ No newline at end of file
